sources:
  - name: Enquete
    handler:
      grpc:
        source: ./enquete.proto
        endpoint: '{env.GRPC_SERVER_HOST}:{env.ENQUETE_GRPC_SERVER_PORT}'
        # metaData:
        metaData:
          # authorization: 'Bearer {context.headers['x-my-token']}'
          myCustomField: '{context.myCustomField}'
          someStaticValue: 'MyStaticValue'
          bar: 123
          time: '{context.currentDateTime}'
          foo: "{context.headers['foo']}"
  - name: User
    handler:
      grpc:
        source: ./user.proto
        endpoint: '{env.GRPC_SERVER_HOST}:{env.USER_GRPC_SERVER_PORT}'
transforms:
  - rename:
      renames:
        - from:
            type: Query
            field: mypackage_enquete_EnqueteService_(.*)
          to:
            type: Query
            field: $1
          useRegExpForFields: true
        - from:
            type: mypackage_enquete_(.*)
          to:
            type: $1
          useRegExpForTypes: true
        - from:
            type: Query
            field: mypackage_user_UserService_(.*)
          to:
            type: Query
            field: $1
          useRegExpForFields: true
        - from:
            type: mypackage_user_(.*)
          to:
            type: $1
          useRegExpForTypes: true
        - from:
            type: (.*)_Input
          to:
            type: $1
          useRegExpForTypes: true
  - namingConvention:
      typeNames: pascalCase
      enumValues: upperCase
      fieldNames: camelCase
      fieldArgumentNames: camelCase
additionalEnvelopPlugins: './envelopPlugins'

